syntax = "proto3";

import "p2p/proto/common.proto";

// sent to all peers (except the ones this was received from, if any).
// for a fraction of peers, also send the GetBlocks response (as if they asked for it for this block)
message NewBlock {
    BlockID id = 1;
}

// for now, we assume a small consensus, so this fits in 1M. Else, these will be repeated
message Signatures {
    BlockID id = 1;
    repeated Signature signatures = 2; // can be more explicit here about the signature structure as this is not part of account abstraction
}

message StateDiff
{
    // a bit more efficient than the state sync separation
    message ContractDiff {
        Address address = 1;
        Felt252 nonce = 2;
        Felt252 class_hash = 3; // can change for replace_class or new contract
        repeated ContractStoredValue values = 4;
    }

    repeated ContractDiff contract_diffs = 3;
}

// can be several in a single reply
message Transactions {
    repeated Transaction transactions = 2;
}

// can be several in a single reply
message Events {
    repeated Event events = 2;
}

message Classes {
    repeated Class classes = 1;
}
