syntax = "proto3";

import "p2p/proto/common.proto";
import "p2p/proto/transaction.proto";
import "p2p/proto/state.proto";
import "google/protobuf/timestamp.proto";


// WIP - will change

message Proposal {
    uint64 block_number = 1;
    uint32 round = 2;
    uint32 pol = 3;  // proof of lock
    Hash block_header_hash = 4;
    google protobuf Timestamp timestamp = 5;
    ConsensusSignature signature = 6;
}

// A block proposal is a series of (Transactions+, StateDiff)* BlockHeader

message Vote {
    enum  Type {
        UNKNOWN = 0;
        Proposal = 1;
        Prevote = 2;
        Precommit = 3;
    };

    Proposal proposal = 1;
    Address validator_address = 2;
    int32 validator_index = 3;  // ???
    ConsensusSignature signature = 4;
}

message CreateBlock {
    oneof messages {
        Transactions transactions = 1;
        StateDiff state_diff = 2;
        Proposal proposal = 3;
    }
}
